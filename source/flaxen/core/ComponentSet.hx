/**
	Example:
		flaxen.newComponentSet("thang")
			.add(Position.zero)
			.add(function() { return new Layer(15); });
		flaxen.installComponents(myEntity, "thang")
			.add(new OtherComponent());
*/
package flaxen.core;

import ash.core.Entity;

class ComponentSet
{
	private var components:Array<Dynamic>;

	public function new()
	{
		components = new Array<Dynamic>();
	}

	// Adds a component to the component set. There are several ways to do this:
	//
	// add(ComponentClass) - adds a new empty instance of the class
	// add(new ComponentClass()) - adds the class instance supplied
	// add(Class.staticFunction) - adds an instance generated by a function
	// add(function() { return new ComponentClass(param, param); }) - same, but you can add parameters
	public function add(component:Dynamic): ComponentSet
	{
		components.push(component);
		return this;
	} 

	// Installs the components into the entity
	public function addToEntity(entity:Entity)
	{
		for(component in components)
		{
			var instance:Dynamic = component;

			if(Std.is(component, Class))
				instance = Type.createEmptyInstance(component);

			else if (Reflect.isFunction(component))
			{
				var f:Void->Dynamic = cast component;
				instance = f();
			}

			entity.add(instance);
		}
	}
}